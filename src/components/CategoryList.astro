---
import { getCollection } from 'astro:content';

// Get all unique categories and count articles in each
const allArticles = await getCollection('articles');
const categoryCount = allArticles.reduce((acc, article) => {
  const category = article.data.category;
  acc[category] = (acc[category] || 0) + 1;
  return acc;
}, {} as Record<string, number>);

// Sort categories by name
const categories = Object.entries(categoryCount)
  .sort(([a], [b]) => a.localeCompare(b))
  .map(([name, count]) => ({ name, count }));
---

<div class="category-list">
  <h2 class="title">Categories</h2>
  <ul class="categories">
    {categories.map(category => (
      <li>
        <a href={`/category/${category.name.toLowerCase()}`} class="category-item">
          <span class="name">{category.name}</span>
          <span class="count">{category.count}</span>
        </a>
      </li>
    ))}
  </ul>
</div>

<style>
  .category-list {
    background-color: var(--color-bg-card);
    border-radius: 8px;
    overflow: hidden;
    border: 1px solid var(--color-border);
    margin-bottom: 2rem;
  }
  
  .title {
    font-size: 1.25rem;
    padding: 1rem 1.5rem;
    margin: 0;
    border-bottom: 1px solid var(--color-border);
  }
  
  .categories {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  .category-item {
    display: flex;
    justify-content: space-between;
    padding: 1rem 1.5rem;
    color: var(--color-text-primary);
    text-decoration: none;
    border-bottom: 1px solid var(--color-border);
    transition: background-color 0.3s ease;
  }
  
  .category-item:hover {
    background-color: var(--color-bg-hover);
  }
  
  .categories li:last-child .category-item {
    border-bottom: none;
  }
  
  .count {
    background-color: var(--color-bg-badge);
    color: var(--color-text-primary);
    padding: 0.125rem 0.5rem;
    border-radius: 12px;
    font-size: 0.75rem;
  }
</style>
---
interface Crumb {
  label: string;
  href: string;
}

interface Props {
  crumbs: Crumb[];
}

const { crumbs } = Astro.props;
---

<nav class="breadcrumbs" aria-label="Breadcrumbs">
  <ol>
    <li>
      <a href="/">Home</a>
      <span class="separator">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
      </span>
    </li>
    {crumbs.map((crumb, index) => (
      <li>
        {index === crumbs.length - 1 ? (
          <span class="current">{crumb.label}</span>
        ) : (
          <>
            <a href={crumb.href}>{crumb.label}</a>
            <span class="separator">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="9 18 15 12 9 6"></polyline>
              </svg>
            </span>
          </>
        )}
      </li>
    ))}
  </ol>
</nav>

<style>
  .breadcrumbs {
    margin-bottom: 2rem;
  }
  
  ol {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  }
  
  li {
    display: flex;
    align-items: center;
  }
  
  a {
    color: var(--color-text-secondary);
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  a:hover {
    color: var(--color-primary);
  }
  
  .current {
    color: var(--color-primary);
    font-weight: 500;
  }
  
  .separator {
    display: flex;
    align-items: center;
    color: var(--color-text-secondary);
    margin: 0 0.5rem;
  }
</style>
---
import Layout from '../../layouts/Layout.astro';
import ArticleList from '../../components/ArticleList.astro';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import { getCollection } from 'astro:content';

// Generate static paths for all categories
export async function getStaticPaths() {
  const allArticles = await getCollection('articles');
  const categories = [...new Set(allArticles.map(article => article.data.category))];
  
  return categories.map(category => ({
    params: { category: category.toLowerCase() },
    props: { category }
  }));
}

// Get category from params
const { category } = Astro.props;

// Get articles for this category
const articles = await getCollection('articles', ({ data }) => {
  return data.category.toLowerCase() === category.toLowerCase();
});

// Sort by date (newest first)
const sortedArticles = articles.sort((a, b) => 
  b.data.pubDate.getTime() - a.data.pubDate.getTime()
);

// Capitalize first letter of category for display
const displayCategory = category.charAt(0).toUpperCase() + category.slice(1);
---

<Layout title={`${displayCategory} Articles`} description={`Articles about ${displayCategory}`}>
  <main>
    <div class="container">
      <div class="category-header">
        <Breadcrumbs crumbs={[
          { label: displayCategory, href: `/category/${category.toLowerCase()}` }
        ]} />
        
        <h1>{displayCategory}</h1>
        <p class="description">Articles and guides about {displayCategory}</p>
      </div>
      
      <ArticleList articles={sortedArticles} />
    </div>
  </main>
</Layout>

<style>
  main {
    padding: 2rem 0;
  }
  
  .category-header {
    margin-bottom: 2rem;
  }
  
  h1 {
    font-size: 2.5rem;
    margin: 1rem 0;
  }
  
  .description {
    color: var(--color-text-secondary);
    font-size: 1.125rem;
    margin-bottom: 2rem;
  }
</style>